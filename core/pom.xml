<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.restheart</groupId>
    <artifactId>restheart-parent</artifactId>
    <version>6.1.0-SNAPSHOT</version>
  </parent>

  <groupId>org.restheart</groupId>
  <artifactId>restheart</artifactId>
  <packaging>jar</packaging>

  <name>restheart-core</name>
  <description>RESTHeart Core - Core services for RESTHeart</description>
  <url>https://restheart.org</url>
  <inceptionYear>2014</inceptionYear>

  <licenses>
    <license>
      <name>GNU Affero General Public License (AGPL) version 3.0</name>
      <url>http://www.gnu.org/licenses/agpl-3.0.html</url>
      <distribution>repo</distribution>
      <comments>Core components license</comments>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>org.restheart</groupId>
      <artifactId>restheart-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>io.undertow</groupId>
      <artifactId>undertow-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-legacy</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kohsuke</groupId>
      <artifactId>akuma</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>5.8.0</version>
    </dependency>
    <dependency>
      <groupId>org.fusesource.jansi</groupId>
      <artifactId>jansi</artifactId>
    </dependency>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>de.svenkubiak</groupId>
      <artifactId>jBCrypt</artifactId>
    </dependency>
    <dependency>
      <groupId>io.github.classgraph</groupId>
      <artifactId>classgraph</artifactId>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.everit-org.json-schema</groupId>
      <artifactId>org.everit.json.schema</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spullara.mustache.java</groupId>
      <artifactId>compiler</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.substratevm</groupId>
      <artifactId>svm</artifactId>
    </dependency>
    <dependency>
      <groupId>com.graphql-java</groupId>
      <artifactId>graphql-java</artifactId>
    </dependency>
    <!-- BEGIN Test dependencies -->
    <dependency>
      <groupId>org.restheart</groupId>
      <artifactId>restheart-mongodb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.restheart</groupId>
      <artifactId>restheart-security</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.restheart</groupId>
      <artifactId>restheart-test-plugins</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.intuit.karate</groupId>
      <artifactId>karate-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>fluent-hc</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.eclipsesource.minimal-json</groupId>
      <artifactId>minimal-json</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>com.mashape.unirest</groupId>
        <artifactId>unirest-java</artifactId>
        <scope>test</scope>
    </dependency>
    <!-- END Test dependencies -->
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>org.springframework.build</groupId>
        <artifactId>aws-maven</artifactId>
      </extension>
    </extensions>
    <testResources>
      <testResource>
        <directory>src/test/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <verbose>true</verbose>
          <includes>
            <includes>**/*.java</includes>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>generate-license-headers</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <licenseName>agpl_v3</licenseName>
              <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
              <skipUpdateLicense>${skipUpdateLicense}</skipUpdateLicense>
              <processStartTag>========================LICENSE_START=================================</processStartTag>
              <processEndTag>=========================LICENSE_END==================================</processEndTag>
              <roots>
                <root>src/main/java</root>
                <root>src/test</root>
              </roots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
            <filter>
              <!-- removing overlapping classes, defined also in guava -->
              <artifact>com.google.guava:failureaccess</artifact>
              <excludes>
                <exclude>com/google/common/util/concurrent/internal/InternalFutureFailureAccess.class</exclude>
                <exclude>com/google/common/util/concurrent/internal/InternalFutures.class</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>bin</id>
            <phase>verify</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <id>bin</id>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
              <tarLongFileMode>posix</tarLongFileMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>org.restheart.Bootstrapper</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
            <manifestEntries>
              <Build-Time>${maven.build.timestamp}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <skip>${skipITs}</skip>
          <showLogs>false</showLogs>
          <images>
            <image>
              <name>mongo:${mongodb.version}</name>
              <run>
                <cmd>--bind_ip_all --replSet rs0</cmd>
                <ports>
                  <port>27017:27017</port>
                </ports>
                <wait>
                  <log>waiting for connections on port</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>dist</id>
            <phase>package</phase>
            <configuration>
              <target>
                <mkdir dir="./target/plugins" />
                <copy file="../security/target/restheart-security.jar" todir="./target/plugins" overwrite="true" />
                <copy file="../mongodb/target/restheart-mongodb.jar" todir="./target/plugins" overwrite="true" />
                <copy file="../polyglot/target/restheart-polyglot.jar" todir="./target/plugins" overwrite="true" />
                <copy file="../graphql/target/restheart-graphql.jar" todir="./target/plugins" overwrite="true" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>start-server</id>
            <phase>pre-integration-test</phase>
            <configuration>
              <skip>${skipITs}</skip>
              <target>
                <copy file="../test-plugins/target/restheart-test-plugins.jar" todir="./target/plugins" overwrite="true" />
                <echo>***** Initiliazing MongoDB cluster...</echo>
                <exec executable="docker">
                  <arg value="run" />
                  <arg value="--rm" />
                  <arg value="--net" />
                  <arg value="host" />
                  <arg value="mongo:${mongodb.version}" />
                  <arg value="mongo" />
                  <arg value="--eval" />
                  <arg value="rs.initiate()" />
                </exec>
                <echo>***** NOTE: in order to execute the integration test suite you need:</echo>
                <echo>1 - Linux, OSX or Solaris (server is started with --fork option via bash script)</echo>
                <exec dir="${basedir}" executable="bin/start.sh">
                  <arg value="etc/test/restheart.yml" />
                  <arg value="--fork" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-server</id>
            <phase>post-integration-test</phase>
            <configuration>
              <skip>${skipITs}</skip>
              <target>
                <delete file="./target/plugins/restheart-test-plugins.jar" />
                <echo>***** Stopping RESTHeart process...</echo>
                <exec dir="${basedir}" executable="bin/stop.sh">
                  <arg value="etc/test/restheart.yml" />
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>deps</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.1.2</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <dependencies>
        <dependency>
          <groupId>org.restheart</groupId>
          <artifactId>restheart-security</artifactId>
        </dependency>
        <dependency>
          <groupId>org.restheart</groupId>
          <artifactId>restheart-mongodb</artifactId>
        </dependency>
        <dependency>
          <groupId>org.restheart</groupId>
          <artifactId>restheart-polyglot</artifactId>
        </dependency>
        <dependency>
          <groupId>org.restheart</groupId>
          <artifactId>restheart-graphql</artifactId>
        </dependency>
        <!-- uncomment to add test plugins to the native image -->
        <!-- <dependency>
          <groupId>org.restheart</groupId>
          <artifactId>restheart-test-plugins</artifactId>
          <version>${project.version}</version>
        </dependency> -->
        <dependency>
          <groupId>com.github.jnr</groupId>
          <artifactId>jnr-unixsocket</artifactId>
          <version>0.18</version> <!-- check version at https://github.com/mongodb/mongo-java-driver/blob/master/build.gradle -->
        </dependency>
        <dependency>
          <groupId>org.mongodb</groupId>
          <artifactId>mongodb-crypt</artifactId>
          <version>1.1.0</version> <!-- check version at https://github.com/mongodb/mongo-java-driver/blob/master/build.gradle -->
        </dependency>
        <dependency>
          <groupId>org.xerial.snappy</groupId>
          <artifactId>snappy-java</artifactId>
          <version>1.1.4</version> <!-- check version at https://github.com/mongodb/mongo-java-driver/blob/master/build.gradle -->
        </dependency>
        <dependency>
          <groupId>com.github.luben</groupId>
          <artifactId>zstd-jni</artifactId>
          <version>1.4.5-1</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>native-image-maven-plugin</artifactId>
            <version>${graalvm.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>native-image</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>