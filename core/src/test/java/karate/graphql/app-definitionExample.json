{
  "_id": "test",
  "descriptor": {
    "description": "This is a GraphQL application to test plugin features",
    "enabled": true,
    "uri": "testapp"
  },
  "schema": "type User{id: Int!, firstName: String, lastName: String, phone: String, mainEmail: String, friends: [User], posts(limit: Int = 0, skip: Int = 0): [Post]} type Post{text: String, date: DateTime, author: User} type Query{users(limit: Int = 0, skip: Int = 0, sort: Int = 1): [User]}",
  "mappings": {
    "User": {
      "id": "_id" ,
      "firstName": "name",
      "lastName": "surname",
      "phone": "contacts.phone",
      "mainEmail": "contacts.emails.0",
      "friends": {
        "db": "test-graphql",
        "collection": "users",
        "find": {
          "_id": {"$in": {"$fk": "friends_ids"}}
        },
        "limit": {"$arg": "limit"},
        "skip": {"$arg": "skip"}
      },
      "posts": {
        "db": "test-graphql",
        "collection": "posts",
        "find": {
          "_id": {"$in":  {"$fk": "posts_ids"}}
        },
        "limit": {"$arg": "limit"},
        "skip": {"$arg": "skip"}
      }
    },
    "Post": {
      "author": {
        "db": "test-graphql",
        "collection": "users",
        "find": {
          "_id": {"$fk":  "author_id"}
        }
      }
    },
    "Query": {
      "users": {
        "db": "test-graphql",
        "collection": "users",
        "limit": {"$arg":  "limit"},
        "skip": {"$arg": "skip"},
        "sort": {"_id":  {"$arg": "sort"}}
      }
    }
  }
}