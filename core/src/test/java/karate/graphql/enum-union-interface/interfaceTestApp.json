{
    "_id": "test-interface",
    "descriptor": {
      "name": "test-interface",
      "description": "GraphQL App using Interface",
      "enabled": true,
      "uri": "test-interface"
    },
    "schema": "enum Level { ENTRY, MEDIUM, ADVANCED } interface Course { _id: ObjectId, title: String, level: Level } type InternalCourse implements Course { _id: ObjectId, title: String, level: Level } type ExternalCourse implements Course { _id: ObjectId, title: String, level: Level, deliveredBy: String } type Query { AllCourses: [Course], AllInternalCourses: [InternalCourse], AllExternalCourses: [ExternalCourse] }",
    "mappings":{
      "Course": {
          "$typeResolver": {
            "InternalCourse": "not field-exists(sub.external)",
            "ExternalCourse": "field-eq(field=sub.external, value=true)"
        }
      },
      "Level": {
          "ENTRY": 0,
          "MEDIUM": 1,
          "ADVANCED": 2
      },
      "Query": {
        "AllInternalCourses":{
          "db": "test-graphql",
          "collection": "courses",
          "find": { "sub": { "external": null } },
          "sort": { "_id": -1 }
        },
        "AllExternalCourses":{
          "db": "test-graphql",
          "collection": "courses",
          "find": { "sub": { "external": true } },
          "sort": { "_id": -1 }
        },
        "AllCourses":{
          "db": "test-graphql",
          "collection": "courses",
          "find": { },
          "sort": { "_id": -1 }
        }
      }
    }
  }